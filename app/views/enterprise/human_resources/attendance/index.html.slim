ruby:
  my_start_attendance = Time.parse(@start_attendance)
  my_end_attendance = Time.parse(@end_attendance)
  absences = 0
  tardiness = 0
  overtime = 0

form method='get' action='#{enterprise_human_resources_attendance_process_attendance_grid_path}'
  input type='hidden' name='branch_id' value='#{@branch_id}'
  input type='hidden' name='start_attendance' value='#{@start_attendance}'
  input type='hidden' name='end_attendance' value='#{@end_attendance}'
  div.attendance_grid
    table
      thead
        tr
          th
            div.title_attendance EMPLOYEE
            ruby:
              current_attendance = my_start_attendance
          - while (current_attendance <= my_end_attendance)
            th
              div.title_attendance = current_attendance.strftime('%m/%d/%Y') + ', ' + current_attendance.strftime('%A')
            ruby:
              current_attendance = current_attendance + 1.day

      tbody
        - unless @employee_set.count == 0
          - @employee_set.each do |employee|

            tr
              td.employee_cell
                a.btn.btn-default.little_button href='#{employee.system_account.show_path}' target='_new'
                  = employee.system_account.name

                ruby:
                  current_attendance = my_start_attendance

              - while (current_attendance <= my_end_attendance)

                ruby:
                  attendance_status = employee.attendance_status(current_attendance)
                  absences += 1 if attendance_status == 'no_record'
                  overtime += 1 if attendance_status == 'overtime'
                  tardiness += 1 if attendance_status == 'undertime'
                  attendance_class_name = 'attendance ' + attendance_status

                td class='#{attendance_class_name}'
                  - unless attendance_status == 'no_record'
                    - AttendanceRecord.where(employee_id: employee.id, implemented_on: current_attendance.strftime('%Y-%m-%d')).each do |record|
                        div.attendance_cell
                          a.btn.btn-default.little_button href='#{record.show_path}' target='_new' =record.attendance_period
                  - else
                    ruby:
                      selector_details = ',' + employee.id + ',' + current_attendance.strftime('%Y%m%d').to_s
                    div.attendance_cell = report_selector([['no_record','No Record'],['whole_day' + selector_details,'Whole Day'],['half_day' + selector_details,'Half Day']],'quick_attendance[]')

                ruby:
                  current_attendance = current_attendance + 1.day

        - else
          div.statement No Employees for Branch

  br
  div.float-clearing
  button.btn.btn-default.btn-xs.report_submit type='submit' Add Quick Attendance
  div.float-clearing
  br

// colored legends for different table cells
div.attendance_legend
  span.legend_label LEGEND :
  span.legend.exact Exact Present
  span.legend.shifted Shifted Present
  span.legend.undertime Undertime
  span.legend.overtime Overtime
  span.legend.no_record No Record Exists

// statistics per attendance per branch
div.branch_statistics
  ruby:
    days = (((my_end_attendance - my_start_attendance).to_i / (24 * 60 * 60)) + 1) * @employee_set.count
    presence = days - absences
    presence_ratio = ((presence.to_f / days.to_f ) * 100).round(2)
    tardiness_ratio = ((tardiness.to_f / presence.to_f ) * 100).round(2)
    overtime_ratio = ((overtime.to_f / presence.to_f) * 100).round(2)
  span.stat Presence : #{presence_ratio.to_s + '%'}
  span.stat Tardiness : #{tardiness_ratio.to_s + '%'}
  span.stat Overtime : #{overtime_ratio.to_s + '%'}